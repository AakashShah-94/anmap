#summary One-sentence summary of this page.

= How-to build new version =
<font color="red"><h2> sketch </h2> </font>

==Compile from source==
With [http://code.google.com/p/anmap/wiki/developers_land_debian2android Debian] and [http://code.google.com/p/connectbot/ ConnectBot] or adb shell right on your device:
{{{
$ su
# bootdebian

# cd /usr/src
# wget http://nmap.org/dist/nmap-5.59BETA1.tar.bz2
# bzip2 -cd nmap-5.59BETA1.tar.bz2 | tar xvf -
# cd nmap-5.59BETA1
# ./configure
# make
}}}

Now, you have nmap installed on debian image, try to strip it:
{{{
# ls -la nmap
# strip nmap
# ls -la nmap
}}}

And try to scan:
{{{
# nmap localhost
}}}


== Start Eclipse ==
related:<br>
[http://code.google.com/p/anmap/ code.google.com]

[http://code.google.com/p/androidterm/ androidterm]

[http://code.google.com/p/cidrcalculator/source/browse/trunk/src/us/lindanrandy/cidrcalculator/Converter.java cidrcalculator/..blabla../Converter.java] 

[https://github.com/rorist/android-network-discovery android-network-discovery]

[http://code.google.com/p/connectbot/ connectbot]



= Details =
<h3>1.Daemon jobs class: </h3>
<i>SIGNALL's, 
kill 
-HUP 
-9 
etc</i>

Universal class to start/stop/restart/reload config/etc for any daemons from sshd to apache.

<h3>2.Content: </h3>
<i>(xml skelet)</i>

<h3>3.Edit(Main window): </h3>
<i>(nmap command line [popup help] 4ex. current command translation to human language)
get value in button,</i>
<br>
big christmass tree button, you push it and look at tcp packets with rather flags fly from left to right side of you mobile device monitor.<br>
from right to left...<br>
etc.. <br>

<h3>4.Button: start nmap</h3>
<i> check for true root privilegies flags, stop with toast or get root and start[Button2: root enable/disable] </i>

{{{
 public class MyActivity extends Activity {
     protected void onCreate(Bundle icicle) {
         super.onCreate(icicle);

         setContentView(R.layout.content_layout_id);

         final Button button = (Button) findViewById(R.id.button_id);
         button.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
                 // Perform action on click
             }
         });
     }
 }
}}}

<h3>5.Get output(like connectbot)</h3>

[http://code.google.com/p/connectbot/ connectbot]

<br>
<h3>6.Get root right</h3>
[http://www.google.com/search?btnG=1&pws=0&q=request+root+access+android]

[http://www.stealthcopter.com/blog/2010/01/android-requesting-root-access-in-your-app/]

{{{

public static boolean runRootCommand(String command) {
        Process process = null;
        DataOutputStream os = null;
                try {
                        process = Runtime.getRuntime().exec("su");
                os = new DataOutputStream(process.getOutputStream());
                os.writeBytes(command+"\n");
                os.writeBytes("exit\n");
                os.flush();
                process.waitFor();
                } catch (Exception e) {
                        Log.d("*** DEBUG ***", "Unexpected error - Here is what I know: "+e.getMessage());
                        return false;
                }
                finally {
                        try {
                                if (os != null) {
                                        os.close();
                                }
                                process.destroy();
                        } catch (Exception e) {
                                // nothing
                        }
                }
                return true;
    }

}}}

<h3>7.Button(Menu): Help </h3>
{{{
Man page / ( nmap -h ) / some doc or links
}}}
<h3>8.Button(Menu): Bug report/Test how it doing</h3><br>
<i> (Verbose, Sillent)</i> <br>
<font color="green"><h2>Button(internal): Send bug report.</h2></font><br>
try to send me email - bug report with full debug log  of root/unroot scanning, and other info, such as: <br>
1. all system data: set, env, root_dir, sdcard_dir, file systems, phone generation, os version etc. <br>
2. md5,sha256 of current unpacked apk release.<br>
3. result of scanning some special targets.(some tower wich will log it) + timestamp<br>
<br>
 <br>


<h3>9.Button(Menu): Journal</h3>

<i> history by ips/domain-names located on sdcard. </i>
When you try again any ip, you can get diff highlighted on old scan log  "+"/"-" new/old line.<br>
Some cool format to contain this diff in long time. <br>
with all things <br>
<br>

<h3>10.Monitor mode(like [http://en.wikipedia.org/wiki/Iftop iftop], [http://freshmeat.net/projects/nload/ nload], [http://nethogs.sourceforge.net/ nethogs], [http://www.phildev.net/iptstate/ ipstate], trafshow) (probably, stand alone app)</h3>
{{{
Network discovery.

Check every ip/arp connection(OS, bytecount in/out, proto).

View in real time state netland, like a top(UNIX).

(by getting headers wireshark/tcpdump)

(by current network settings)

(by nmap -O -iL current_ip_list)

}}}